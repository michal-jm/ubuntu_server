# check if ssh is running
systemctl status ssh

# in case no service install it:
sudo apt install openssh-server

# find ip
ip a

# there are 2 ways to configure ssh on vm:
# 1 use card in 'nat' mode with port forwarding
virtual box/network/setting/network adapter/advanced/forwarding rules
name | protocol | host ip   | host port | guest ip | guest port
---------------------------------------------------------------
SSH | TCP       | 172.0.0.1 |   22      |          | 22

if host ip = 127.0.0.1 then we can acces server (vm) onlu from our physical machine (host for the VM)
if we want access for other machnes in LAN then leave host ip blank

host port- port on our machne. Can be any free port (ideally 22 however if we have ssh server on local machine then it must not be 22)
netstat -a --> check for ports that are busy 

guest ip leave blank as DHCP working for VM will work it out automatically

guest port has to be 22 as ssh server is working on 22

jesli komp laczy sie z oprogramowaniem na nim zainstalowanym 'po sieci' to zazwyczaj uzywa sie 172.0.0.1
if host ip was left blank then for ssh we could use ip address of the server

so when all is in place and setup as in the table above in the console (cmdr) type:


# 2 use bridge adapter and ip from the same range as outside network (how to find out outside network??)
set up a network card in vm in a  bridge mode
sudo nano /etc/netplan/50-cloud-init.yaml
network:
  ethernets:
    enp0s3:
      dhcp4: True
    enp0s8:
      addresses:
      - 10.0.0.1/24
      nameservers: {}
     enp0s9:
      addresses:
      -172.16.10.1/24
      nameservers:
        addresses[8.8.8.8, 8.8.4.4]
  version 2
change to:
    enp0s9:
       dhcp4: True
 version 2
 
 save file and then
 sudo netplan apply
 ip a --> to check ip assigned to the bridged card
 
 and in the console ssh michal@<ip bridged card> -p 22
 
